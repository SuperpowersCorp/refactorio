settings:
  target: ../example-data
  # exe: "stack exec refactorio --"  # TODO: This is currently hardcoded
examples:
- name: "help"
  cmd: "$EXE --help"
  pre: "Current help output at screenshot generation time"
  version: 0
- name: "json"
  pre: "Increment the value at key 'baz' by 1962."
  cmd: "$EXE -p -t $TARGET --json 'key \"quiz\" . key \"sport\" . key \"q1\" . key \"options\" . _Array . each . _String %~ Text.toUpper'"
  version: 0
- name: yaml
  pre: "Multiply the value of the key 'baz' by 10."
  cmd: "$EXE -t $TARGET/examples.yaml -p --yaml 'yaml . key "examples" ... key "version" . _Number +~ 32' | head -40"
  version: 0
# - name: html
#   pre: "HTML example coming soon."
#   cmd: "echo HTML makes me sad - real example coming soon."
#   version: 0
- name: xml
  pre: "C'mon, you've never needed to \"find all the authors with names longer than 15 characters and then sort all of the letters in their name that are above 'm' in place?\" Pshaw."
  cmd: "$EXE -t $TARGET/books.xml -p --xml 'convertTo(a::LByteString) . xml . node \"book\" . node \"author\" . text . filtered ((>12) . Text.length) . partsOf (each.filtered (>Prelude.head \"m\")) %~ sort'"
  version: 0
- name: regex
  pre: "Drop regex's in anywhere you like, eg. \"uppercase and reverse the characters in the value of the JSON object at this key that match this regular expression\":"
  cmd: "$EXE -t $TARGET -p --json 'key \"quiz\" . key \"sport\" . key \"q1\" . key \"answer\" . _String . Text.unpacked . regex [r|[aeiou]|] . matchedString %~ map Char.toUpper'"
  version: 0
# - name: zlib
#   pre: "Reach inside eg. gzipped files and do what you gotta do:"
#   post: "(Not sure what's up with that \"trailing garbage.\")"
#   cmd: "cat $TARGET/b.json.gz | $EXE -t - --json 'convert . from Z.gzipped . from convert . key \"baz\" . _Number *~ 85' | gzcat -"
#   version: 0
- name: composing-multiple-edits
  cmd: "$EXE -p -t $TARGET/quiz.json --json '(key \"quiz\" . key \"sport\" . key \"q1\" . key \"answer\" . _String %~ Text.toUpper) . (key \"quiz\" . key \"maths\" . key \"q2\" . key \"options\" . _Array . traverse . _String .~ \"censored\")'"
  post: NB. in this example the JSON is roundtripped through the serialization process twice
  version: 0
- name: hs-ints
  cmd: "$EXE -t src/Refactorio/Engine.hs --search --haskell _Module.biplate._Int.end"
  version: 0
- name: hs-modname
  cmd: "$EXE -t src/Refactorio/Main.hs --search --haskell _Module.biplate._ModuleName.end"
  version: 0
- name: hs-string
  cmd: "$EXE -t src/Refactorio/Main.hs --search --haskell _Module.biplate._String.end | head -40"
  version: 0
- name: hs-fieldupdate
  cmd: "$EXE -t src/Refactorio/Theme.hs --search --haskell _Module.biplate._FieldUpdate.end"
  version: 0
- name: hs-frac
  cmd: "$EXE -t src --search --haskell _Module.biplate._Frac.end"
  version: 0
- name: hs-odd-ints
  cmd: "$EXE -t src/Refactorio/Legacy.hs --search --haskell '_Module.biplate._Int.filtered(odd.view target).end'"
  version: 0
- name: hs-ints-gt-10
  cmd: "$EXE -t src --search --haskell '_Module.biplate._Int.filtered((>10).view target).end'"
  version: 0
- name: json-review-string
  cmd: "$EXE -p -t $TARGET/quiz.json --json 'key \"quiz\" . members .~ _String # \"DELETED\"'"
  version: 0
# - name: decimal
#   cmd: "$EXE -t - 'convert.decimal +~ 1'"
#   stdin: "10"
#   version: 0
